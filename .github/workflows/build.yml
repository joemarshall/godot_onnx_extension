name: 🛠️ Builds
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - identifier: linux-debug
            name: Linux Debug
            runner: ubuntu-20.04
            target: template_debug
            platform: linux
            arch: x86_64
          - identifier: linux-release
            name: Linux Release
            runner: ubuntu-20.04
            target: template_release
            platform: linux
            arch: x86_64
          - identifier: windows-debug
            name: Windows Debug
            runner: ubuntu-20.04
            target: template_debug
            platform: windows
            arch: x86_64
          - identifier: windows-release
            name: Windows Release
            runner: ubuntu-20.04
            target: template_release
            platform: windows
            arch: x86_64
          - identifier: android-release
            name: Android Release
            runner: ubuntu-20.04
            target: template_release
            platform: android
            arch: arm64

    steps:
      - name: (Windows) Install mingw64
        if: ${{ startsWith(matrix.identifier, 'windows-') }}
        shell: sh
        run: |
          sudo apt-get install mingw-w64
          sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
          sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix

      - name: (Android) Install JDK 17
        if: ${{ startsWith(matrix.identifier, 'android-') }}
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: (Android) Install Android SDK
        if: ${{ startsWith(matrix.identifier, 'android-') }}
        uses: android-actions/setup-android@v3

      # From Godot docs, might not be necessary.
      #- name: (Android) Install Android Tools
      #  if: ${{ startsWith(matrix.identifier, 'android-') }}
      #  shell: sh
      #  run: |
      #    "$ANDROID_SDK_ROOT"/cmdline-tools/latest/bin/sdkmanager --sdk_root="$ANDROID_SDK_ROOT" "platform-tools" "build-tools;30.0.3" "platforms;android-29" "cmdline-tools;latest" "cmake;3.10.2.4988404"

      - name: (Android) Install NDK r23c
        if: ${{ matrix.platform == 'android' }}
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r23c
          link-to-sdk: true

      - name: Install Python
        uses: actions/setup-python@v2

      - name: Install SCons
        shell: bash
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          scons --version

      - name: Checkout project
        uses: actions/checkout@v2
        with:
          submodules: false
      - name: Get submodule ID for godot-cpp (for use in cache)
        id: godot_submodule
        shell: bash
        run: |
          export COMMIT_ID=`git ls-tree HEAD godot-cpp |  awk '{print $3}'`
          echo "godot_commit=${COMMIT_ID}" >> "$GITHUB_OUTPUT"
      - name: Get scons cache
        id: cache
        uses: actions/cache/restore@v3
        with:
          path: |
            ${{ github.workspace }}/.scons-cache/
            ${{ github.workspace }}/**/.sconsign.dblite
            ${{ github.workspace }}/godot-cpp
          key: ${{ matrix.identifier }}-scons-cache-${{steps.godot_submodule.outputs.godot_commit}}
      - name: get godot submodule
        if: steps.cache.outputs.cache-hit != 'true'
        shell: sh
        run: |
          git submodule update --init "godot-cpp"
      - name: Compile extension
        id: compile
        shell: sh
        env:
          SCONS_CACHE: '${{ github.workspace }}/.scons-cache/'
#          SCONS_CACHE_LIMIT: 8192
        run: |
          scons target='${{ matrix.target }}' platform='${{ matrix.platform }}' arch='${{ matrix.arch }}' -Q | tee output.txt
          cat .cache_used >> "$GITHUB_OUTPUT"
      - name: Copy extra files to addon
        shell: sh
        run: |
          for addon in ${{ github.workspace }}/project/addons/*/; do
            cp --no-clobber '${{ github.workspace }}/README.md' '${{ github.workspace }}/LICENSE' "$addon"
          done

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-${{matrix.identifier}}
          path: |
            ${{ github.workspace }}/project/
      - name: Delete non-working cache in case you've changed something in scons etc. that forces a rebuild
        if: ${{ steps.cache.outputs.cache-hit == 'true' && steps.compile.outputs.cache-hit != 'true' }}
        continue-on-error: true
        run: |
          gh extension install actions/gh-actions-cache
          gh actions-cache delete "${{ matrix.identifier }}-scons-cache-${{steps.godot_submodule.outputs.godot_commit}}" --confirm
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}      
      - name: Write scons cache
        id: save_cache
        uses: actions/cache/save@v3
        if: steps.compile.outputs.cache-hit != 'true'
        with:
          path: |
            ${{ github.workspace }}/.scons-cache/
            ${{ github.workspace }}/**/.sconsign.dblite
            ${{ github.workspace }}/godot-cpp
          key: ${{ matrix.identifier }}-scons-cache-${{steps.godot_submodule.outputs.godot_commit}}

  combine:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
        with:
          submodules: false
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }}/project/
          merge-multiple: true
      - name: Generate gdextension file from parts
        shell: bash
        run: | 
          python merge_config_parts.py
          rm project/addons/*/*.part
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-plugin
          path: ${{ github.workspace }}/project/

